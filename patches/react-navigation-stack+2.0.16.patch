diff --git a/node_modules/react-navigation-stack/src/utils/validateDeprecatedConfig.tsx b/node_modules/react-navigation-stack/src/utils/validateDeprecatedConfig.tsx
index f97a7e4..f298cad 100644
--- a/node_modules/react-navigation-stack/src/utils/validateDeprecatedConfig.tsx
+++ b/node_modules/react-navigation-stack/src/utils/validateDeprecatedConfig.tsx
@@ -1,5 +1,5 @@
 import { StyleProp, ViewStyle } from 'react-native';
-import { StackNavigationOptions, StackNavigationConfig } from '../vendor/types';
+import { StackNavigationConfig, StackNavigationOptions } from '../vendor/types';
 
 type Validation = {
   message: string;
@@ -38,7 +38,6 @@ const validations: Record<string, Validation> = {
   ...[
     'cardShadowEnabled',
     'cardOverlayEnabled',
-    'cardStyle',
     'headerBackTitleVisible',
     'onTransitionStart',
     'onTransitionEnd',
diff --git a/node_modules/react-navigation-stack/src/vendor/views/Stack/Card.tsx b/node_modules/react-navigation-stack/src/vendor/views/Stack/Card.tsx
index 3ea8548..7787ab2 100755
--- a/node_modules/react-navigation-stack/src/vendor/views/Stack/Card.tsx
+++ b/node_modules/react-navigation-stack/src/vendor/views/Stack/Card.tsx
@@ -1,32 +1,21 @@
+import Color from 'color';
 import * as React from 'react';
 import {
-  Animated,
-  View,
-  StyleSheet,
-  ViewProps,
-  StyleProp,
-  ViewStyle,
-  Platform,
-  InteractionManager,
+  Animated, InteractionManager, Platform, StyleProp, StyleSheet, View, ViewProps, ViewStyle
 } from 'react-native';
 import {
-  PanGestureHandler,
-  State as GestureState,
-  PanGestureHandlerGestureEvent,
+  PanGestureHandler, PanGestureHandlerGestureEvent, State as GestureState
 } from 'react-native-gesture-handler';
 import { EdgeInsets } from 'react-native-safe-area-context';
-import Color from 'color';
-import StackGestureRefContext from '../../utils/GestureHandlerRefContext';
+import {
+  GestureDirection,
+  Layout, StackCardStyleInterpolator, TransitionSpec
+} from '../../types';
 import CardAnimationContext from '../../utils/CardAnimationContext';
+import StackGestureRefContext from '../../utils/GestureHandlerRefContext';
 import getDistanceForDirection from '../../utils/getDistanceForDirection';
 import getInvertedMultiplier from '../../utils/getInvertedMultiplier';
 import memoize from '../../utils/memoize';
-import {
-  TransitionSpec,
-  StackCardStyleInterpolator,
-  GestureDirection,
-  Layout,
-} from '../../types';
 
 type Props = ViewProps & {
   index: number;
@@ -454,7 +443,7 @@ export default class Card extends React.Component<Props> {
       : false;
 
     return (
-      <View pointerEvents="box-none" {...rest}>
+      <View pointerEvents="box-none" {...rest} >
         {overlayEnabled && overlayStyle ? (
           <Animated.View
             pointerEvents="none"
diff --git a/node_modules/react-navigation-stack/src/vendor/views/Stack/CardContainer.tsx b/node_modules/react-navigation-stack/src/vendor/views/Stack/CardContainer.tsx
index 2ca12de..f697d7b 100644
--- a/node_modules/react-navigation-stack/src/vendor/views/Stack/CardContainer.tsx
+++ b/node_modules/react-navigation-stack/src/vendor/views/Stack/CardContainer.tsx
@@ -1,17 +1,15 @@
 import * as React from 'react';
-import { Animated, View, StyleSheet, StyleProp, ViewStyle } from 'react-native';
+import { Animated, StyleProp, StyleSheet, View, ViewStyle } from 'react-native';
 import { NavigationState as StackNavigationState } from 'react-navigation';
-import { Props as HeaderContainerProps } from '../Header/HeaderContainer';
-import Card from './Card';
-import HeaderHeightContext from '../../utils/HeaderHeightContext';
 import useTheme from '../../../utils/useTheme';
 import {
-  Route,
-  Scene,
-  Layout,
-  StackHeaderMode,
-  TransitionPreset,
+  Layout, Route,
+  Scene, StackHeaderMode,
+  TransitionPreset
 } from '../../types';
+import HeaderHeightContext from '../../utils/HeaderHeightContext';
+import { Props as HeaderContainerProps } from '../Header/HeaderContainer';
+import Card from './Card';
 
 type Props = TransitionPreset & {
   index: number;
@@ -164,8 +162,8 @@ function CardContainer({
           ? { marginTop: headerHeight }
           : null
       }
-      contentStyle={[{ backgroundColor: colors.background }, cardStyle] as any}
-      style={StyleSheet.absoluteFill}
+      contentStyle={[{ backgroundColor: colors.background }, cardStyle,{backgroundColor:"orange"}] as any}
+      style={[StyleSheet.absoluteFill,{backgroundColor:"green"}]}
     >
       <View style={styles.container}>
         <View style={styles.scene}>
diff --git a/node_modules/react-navigation-stack/src/vendor/views/Stack/CardStack.tsx b/node_modules/react-navigation-stack/src/vendor/views/Stack/CardStack.tsx
index 002b37a..f4625ec 100755
--- a/node_modules/react-navigation-stack/src/vendor/views/Stack/CardStack.tsx
+++ b/node_modules/react-navigation-stack/src/vendor/views/Stack/CardStack.tsx
@@ -1,38 +1,25 @@
 import * as React from 'react';
 import {
-  Animated,
-  View,
-  StyleSheet,
-  LayoutChangeEvent,
-  Dimensions,
-  Platform,
-  ViewProps,
+  Animated, Dimensions, LayoutChangeEvent, Platform, StyleSheet, View, ViewProps
 } from 'react-native';
 import { EdgeInsets } from 'react-native-safe-area-context';
 // eslint-disable-next-line import/no-unresolved
-import { ScreenContainer, Screen, screensEnabled } from 'react-native-screens'; // Import with * as to prevent getters being called
+import { Screen, ScreenContainer, screensEnabled } from 'react-native-screens'; // Import with * as to prevent getters being called
 import { NavigationState as StackNavigationState } from 'react-navigation';
 
-import { getDefaultHeaderHeight } from '../Header/HeaderSegment';
-import { Props as HeaderContainerProps } from '../Header/HeaderContainer';
-import CardContainer from './CardContainer';
+import { forNoAnimation as forNoAnimationCard } from '../../TransitionConfigs/CardStyleInterpolators';
+import { forNoAnimation as forNoAnimationHeader } from '../../TransitionConfigs/HeaderStyleInterpolators';
 import {
   DefaultTransition,
-  ModalTransition,
+  ModalTransition
 } from '../../TransitionConfigs/TransitionPresets';
-import { forNoAnimation as forNoAnimationHeader } from '../../TransitionConfigs/HeaderStyleInterpolators';
-import { forNoAnimation as forNoAnimationCard } from '../../TransitionConfigs/CardStyleInterpolators';
-import getDistanceForDirection from '../../utils/getDistanceForDirection';
 import {
-  Route,
-  Layout,
-  StackHeaderMode,
-  StackCardMode,
-  Scene,
-  StackDescriptorMap,
-  StackNavigationOptions,
-  StackDescriptor,
+  Layout, Route, Scene, StackCardMode, StackDescriptor, StackDescriptorMap, StackHeaderMode, StackNavigationOptions
 } from '../../types';
+import getDistanceForDirection from '../../utils/getDistanceForDirection';
+import { Props as HeaderContainerProps } from '../Header/HeaderContainer';
+import { getDefaultHeaderHeight } from '../Header/HeaderSegment';
+import CardContainer from './CardContainer';
 
 type GestureValues = {
   [key: string]: Animated.Value;
@@ -443,7 +430,9 @@ export default class CardStack extends React.Component<Props, State> {
       <React.Fragment>
         <MaybeScreenContainer
           enabled={isScreensEnabled}
-          style={styles.container}
+          style={[styles.container,{
+            backgroundColor:"red"
+          }]}
           onLayout={this.handleLayout}
         >
           {routes.map((route, index, self) => {
@@ -536,7 +525,7 @@ export default class CardStack extends React.Component<Props, State> {
             return (
               <MaybeScreen
                 key={route.key}
-                style={StyleSheet.absoluteFill}
+                style={[StyleSheet.absoluteFill,{backgroundColor:"blue"}]}
                 enabled={isScreensEnabled}
                 active={isScreenActive}
                 pointerEvents="box-none"
diff --git a/node_modules/react-navigation-stack/src/vendor/views/Stack/StackView.tsx b/node_modules/react-navigation-stack/src/vendor/views/Stack/StackView.tsx
index c30acd7..6fb6ebc 100644
--- a/node_modules/react-navigation-stack/src/vendor/views/Stack/StackView.tsx
+++ b/node_modules/react-navigation-stack/src/vendor/views/Stack/StackView.tsx
@@ -1,24 +1,20 @@
 import * as React from 'react';
-import { Platform } from 'react-native';
-import { SafeAreaConsumer, EdgeInsets } from 'react-native-safe-area-context';
+import { Platform, View } from 'react-native';
+import { EdgeInsets, SafeAreaConsumer } from 'react-native-safe-area-context';
 import {
-  StackActions,
   NavigationState as StackNavigationState,
-  SceneView,
+  SceneView, StackActions
 } from 'react-navigation';
 
-import CardStack from './CardStack';
-import KeyboardManager from '../KeyboardManager';
+import {
+  Route, StackDescriptorMap, StackNavigationConfig, StackNavigationHelpers
+} from '../../types';
 import HeaderContainer, {
-  Props as HeaderContainerProps,
+  Props as HeaderContainerProps
 } from '../Header/HeaderContainer';
+import KeyboardManager from '../KeyboardManager';
 import SafeAreaProviderCompat from '../SafeAreaProviderCompat';
-import {
-  Route,
-  StackNavigationHelpers,
-  StackNavigationConfig,
-  StackDescriptorMap,
-} from '../../types';
+import CardStack from './CardStack';
 
 type Props = StackNavigationConfig & {
   state: StackNavigationState;
@@ -266,11 +262,13 @@ class StackView extends React.Component<Props, State> {
     const SceneComponent = getComponent();
 
     return (
-      <SceneView
+    <View style={{flex:1,backgroundColor:"black"}}>
+        <SceneView
         screenProps={this.props.screenProps}
         navigation={navigation}
         component={SceneComponent}
       />
+    </View>
     );
   };
 
